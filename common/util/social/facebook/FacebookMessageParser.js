"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class FacebookMessage {
    constructor(requestId, senderId, receiverId, messageId) {
        this.messageId = messageId;
        this.requestId = requestId;
        this.senderId = senderId;
        this.receiverId = receiverId;
    }
}
exports.FacebookMessage = FacebookMessage;
class FacebookTextMessage extends FacebookMessage {
    constructor(requestId, senderId, receiverId, messageId, text) {
        super(requestId, senderId, receiverId, messageId);
        this.text = text;
    }
}
exports.FacebookTextMessage = FacebookTextMessage;
class FacebookMessageParser {
    constructor() {
    }
    parseMessage(message) {
        let res = [];
        message.entry.forEach((item) => {
            if (item.messaging) {
                item.messaging.forEach((messageObject) => {
                    if (!messageObject.message) {
                        return;
                    }
                    let textMessage = new FacebookTextMessage(item.id, messageObject.sender.id, messageObject.recipient.id, messageObject.message.mid, messageObject.message.text);
                    res.push(textMessage);
                });
            }
        });
        return res;
    }
    ;
}
exports.default = FacebookMessageParser;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmFjZWJvb2tNZXNzYWdlUGFyc2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiRmFjZWJvb2tNZXNzYWdlUGFyc2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBc0IsZUFBZTtJQU9uQyxZQUFZLFNBQWlCLEVBQUUsUUFBZ0IsRUFBRSxVQUFrQixFQUFFLFNBQWlCO1FBQ3BGLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO0lBQy9CLENBQUM7Q0FFRjtBQWRELDBDQWNDO0FBRUQsTUFBYSxtQkFBb0IsU0FBUSxlQUFlO0lBSXRELFlBQVksU0FBaUIsRUFBRSxRQUFnQixFQUFFLFVBQWtCLEVBQUUsU0FBaUIsRUFBRSxJQUFZO1FBQ2xHLEtBQUssQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUNsRCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNuQixDQUFDO0NBQ0Y7QUFSRCxrREFRQztBQUdELE1BQXFCLHFCQUFxQjtJQUV4QztJQUVBLENBQUM7SUFFRCxZQUFZLENBQUMsT0FBWTtRQUV2QixJQUFJLEdBQUcsR0FBc0IsRUFBRSxDQUFDO1FBRWhDLE9BQU8sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7WUFFN0IsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO2dCQUNsQixJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLGFBQWEsRUFBRSxFQUFFO29CQUN2QyxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sRUFBRTt3QkFDMUIsT0FBTztxQkFDUjtvQkFDRCxJQUFJLFdBQVcsR0FBRyxJQUFJLG1CQUFtQixDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsYUFBYSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsYUFBYSxDQUFDLFNBQVMsQ0FBQyxFQUFFLEVBQUUsYUFBYSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsYUFBYSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQTtvQkFDOUosR0FBRyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztnQkFDeEIsQ0FBQyxDQUFDLENBQUM7YUFDSjtRQUVILENBQUMsQ0FBQyxDQUFDO1FBRUgsT0FBTyxHQUFHLENBQUM7SUFFYixDQUFDO0lBQUEsQ0FBQztDQUdIO0FBN0JELHdDQTZCQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBhYnN0cmFjdCBjbGFzcyBGYWNlYm9va01lc3NhZ2Uge1xuXG4gIHJlcXVlc3RJZDogc3RyaW5nO1xuICBzZW5kZXJJZDogc3RyaW5nO1xuICByZWNlaXZlcklkOiBzdHJpbmc7XG4gIG1lc3NhZ2VJZDogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKHJlcXVlc3RJZDogc3RyaW5nLCBzZW5kZXJJZDogc3RyaW5nLCByZWNlaXZlcklkOiBzdHJpbmcsIG1lc3NhZ2VJZDogc3RyaW5nKSB7XG4gICAgdGhpcy5tZXNzYWdlSWQgPSBtZXNzYWdlSWQ7XG4gICAgdGhpcy5yZXF1ZXN0SWQgPSByZXF1ZXN0SWQ7XG4gICAgdGhpcy5zZW5kZXJJZCA9IHNlbmRlcklkO1xuICAgIHRoaXMucmVjZWl2ZXJJZCA9IHJlY2VpdmVySWQ7XG4gIH1cblxufVxuXG5leHBvcnQgY2xhc3MgRmFjZWJvb2tUZXh0TWVzc2FnZSBleHRlbmRzIEZhY2Vib29rTWVzc2FnZSB7XG5cbiAgdGV4dDogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKHJlcXVlc3RJZDogc3RyaW5nLCBzZW5kZXJJZDogc3RyaW5nLCByZWNlaXZlcklkOiBzdHJpbmcsIG1lc3NhZ2VJZDogc3RyaW5nLCB0ZXh0OiBzdHJpbmcpIHtcbiAgICBzdXBlcihyZXF1ZXN0SWQsIHNlbmRlcklkLCByZWNlaXZlcklkLCBtZXNzYWdlSWQpO1xuICAgIHRoaXMudGV4dCA9IHRleHQ7XG4gIH1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGYWNlYm9va01lc3NhZ2VQYXJzZXIge1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuXG4gIH1cblxuICBwYXJzZU1lc3NhZ2UobWVzc2FnZTogYW55KTogRmFjZWJvb2tNZXNzYWdlW10ge1xuXG4gICAgbGV0IHJlczogRmFjZWJvb2tNZXNzYWdlW10gPSBbXTtcblxuICAgIG1lc3NhZ2UuZW50cnkuZm9yRWFjaCgoaXRlbSkgPT4ge1xuXG4gICAgICBpZiAoaXRlbS5tZXNzYWdpbmcpIHtcbiAgICAgICAgaXRlbS5tZXNzYWdpbmcuZm9yRWFjaCgobWVzc2FnZU9iamVjdCkgPT4ge1xuICAgICAgICAgIGlmICghbWVzc2FnZU9iamVjdC5tZXNzYWdlKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICAgIGxldCB0ZXh0TWVzc2FnZSA9IG5ldyBGYWNlYm9va1RleHRNZXNzYWdlKGl0ZW0uaWQsIG1lc3NhZ2VPYmplY3Quc2VuZGVyLmlkLCBtZXNzYWdlT2JqZWN0LnJlY2lwaWVudC5pZCwgbWVzc2FnZU9iamVjdC5tZXNzYWdlLm1pZCwgbWVzc2FnZU9iamVjdC5tZXNzYWdlLnRleHQpXG4gICAgICAgICAgcmVzLnB1c2godGV4dE1lc3NhZ2UpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHJlcztcblxuICB9O1xuXG5cbn1cbiJdfQ==